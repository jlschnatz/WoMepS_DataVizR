---
title: "Workshop: ggplot2 (Tag 1)"
title-block-style: default
subtitle  : "Itemanalyse"
author    : "Arieja Farugie & Luca Schnatz"
date: "`r Sys.Date()`"

  
code-overflow: wrap
code-block-bg: true
code-block-border-left: "#8800FF"
smooth-scroll: true

#theme: cosmo
format: 
  html:
    self-contained: true
toc: true
touch: true
theme: lux
toc-title: "Inhalt"
highlight-style: printing
---


Zunächst laden wir den Datensatz:

```{r}
#| message: false
library(tidyverse)
library(here)

exercise_data <- read_csv(here("data/exercise_data/exercise_data.csv"))

glimpse(exercise_data)

# colnames(exercise_data) <- c("id", "sex", "alter", "familienstand", "netto_einkommen", "einkommen_binned",
#   "brutto_einkommen", "religion", "erwerb1", "erwerb2", "abschluss", "vollteilzeit",
#   "angstellung", "staatsangehörigkeit", "ka1", "bundesland", "bundesland_neualt",
#   "soziale_schicht", "ka2", paste0("ka", seq(3, 14))
# )

```

-   Welche Basics Plots sollten besprochen werden?
-   Barplot, Scatter, Boxplot, Density, Histogramm, Pie, Donought
- Idee: Vorstellung der Plots aufteilen nach Art der Daten
  - Numerisch (1 Variable), Numerisch (2 Variablen)
  - Kategorisch (1 Variable)
  
```{r}

ggplot(
  data = exercise_data,
  aes(x = x = V601)
) + 
  geom_bar() # im advanced teil -> grouped, stacked barplots nach gruppierung, farbe, facets


# auf die Probleme von Pie und Donought Chart eingehen 
count(exercise_data, V601) %>%
  drop_na() %>%
  ggplot(
    data = .,
    aes(x = "",y = n, group = V601, fill = V601)
    ) + 
    geom_bar(stat="identity", width=1) +
    coord_polar("y", start=0) # im advanced teil dann mit Text als Labels?


ggplot(
  data = exercise_data,
  aes(x = V417)
) + 
  geom_histogram(bins = 200)


ggplot(
  data = exercise_data,
  aes(x = V104, y = V279)
) + 
  geom_boxplot()

ggplot(
  data = exercise_data,
  aes(x = V417)
) + 
  geom_density()

ggplot(
  data = exercise_data,
  aes(x = V172)
) + 
  geom_bar()


# für advanced teil -> manchmal besser lolipop chart statt bar-plot bei sehr vielen kategorien


exercise_data %>%
  count(V868) %>%
  drop_na() %>%
  ggplot(
    data = .,
    aes(y = fct_reorder(V868, n), x = n) 
  ) + 
  geom_bar(stat = "identity", width = 0.025, color = "black") +
  geom_point(size = 3)


exercise_data %>%
  filter(V417 <= 20000 & V497 <= 20000) %>%
  ggplot(
    data = .,
    aes(x = V497, y = V417)
  ) + 
  geom_point()
 
```
